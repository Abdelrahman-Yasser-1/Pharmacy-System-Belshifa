<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
	<UnoUIMSBuildTasksPath Condition="'$(UnoUIMSBuildTasksPath)'==''">..\Uno.UI.Tasks</UnoUIMSBuildTasksPath>
	<UmbrellaMSBuildTasksImported>true</UmbrellaMSBuildTasksImported>
  </PropertyGroup>

  <ItemGroup>
	<UnoSourceGeneratorBeforeTarget Condition="'$(XamarinProjectType)'=='android'" Include="UpdateAndroidAssets" />
  </ItemGroup>

  <UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.v919cd95b5a21c1390b705fb5d53519ed1a3bfa49.dll" TaskName="Uno.UI.Tasks.ResourcesGenerator.ResourcesGenerationTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49" />
  <UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.v919cd95b5a21c1390b705fb5d53519ed1a3bfa49.dll" TaskName="Uno.UI.Tasks.Assets.RetargetAssets_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49" />
  <UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.v919cd95b5a21c1390b705fb5d53519ed1a3bfa49.dll" TaskName="Uno.UI.Tasks.LinkerHintsGenerator.LinkerHintGeneratorTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49" />
  <UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.v919cd95b5a21c1390b705fb5d53519ed1a3bfa49.dll" TaskName="Uno.UI.Tasks.LinkerHintsGenerator.LinkerDefinitionMergerTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49" />

  <!--
  This task transforms all the Content files and PRIResources into resources files compatible for each platform.

  Note: For iOS and Android, it must be run early in the build process, but no publicly stable target is available
  to inject Uno properly. Failing to add this task early enough makes X.A and X.I miss the generated resource files.
  -->
  <Target Name="UnoResourcesGeneration"
			  BeforeTargets="_GetLibraryImports;PrepareForBuild;_CheckForContent;_CollectBundleResources"
			  DependsOnTargets="ResolveProjectReferences"
			  Condition="'$(DesignTimeBuild)' != 'true' and '$(BuildingInsideUnoSourceGenerator)' == ''">

    <CheckForDevenv Condition="'$(SolutionFileName)'=='Uno.UI.sln' and '$(MSBuildRuntimeType)'!='Core'" />

	<!-- String resources -->
	<PropertyGroup>
	  <!-- LEGACY: Old projects define DefaultApplicationLanguage instead of DefaultLanguage -->
	  <DefaultLanguage Condition="'$(DefaultLanguage)'=='' and '$(DefaultApplicationLanguage)'!=''">$(DefaultApplicationLanguage)</DefaultLanguage>
	  <!-- Default to English if DefaultLanguage isn't set -->
	  <DefaultLanguage Condition="'$(DefaultLanguage)'==''">en</DefaultLanguage>
	  <XamarinProjectType Condition="'$(UnoForceProcessPRIResource)'!=''"></XamarinProjectType>
	</PropertyGroup>
	<ResourcesGenerationTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49 Resources="@(PRIResource)"
								 TargetProjectDirectory="$(ProjectDir)"
								 TargetPlatform="$(XamarinProjectType)"
								 IntermediateOutputPath="$(IntermediateOutputPath)"
								 DefaultLanguage="$(DefaultLanguage)">
	  <Output TaskParameter="GeneratedFiles"
					  ItemName="GeneratedFiles" />
	</ResourcesGenerationTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49>
	<ItemGroup>
	  <BundleResource Condition="'%(GeneratedFiles.UnoResourceTarget)' =='iOS'" Include="@(GeneratedFiles)" />
	  <AndroidResource Condition="'%(GeneratedFiles.UnoResourceTarget)' =='Android'" Include="@(GeneratedFiles)" />
	  <EmbeddedResource Condition="'%(GeneratedFiles.UnoResourceTarget)' =='Uno'" Include="@(GeneratedFiles)" />
	</ItemGroup>
  </Target>

  <Target Name="UnoAssetsGeneration"
			  BeforeTargets="_GetLibraryImports;PrepareForBuild;_CheckForContent"
			  DependsOnTargets="ResolveProjectReferences"
			  Condition="'$(DesignTimeBuild)' != 'true' and '$(BuildingInsideUnoSourceGenerator)' == '' and ('$(XamarinProjectType)'!='' or '$(UnoForceProcessPRIResource)'!='')">
	<!-- Assets -->
	<PropertyGroup>
	  <UseHighDPIResources Condition="'$(UseHighDPIResources)'==''">True</UseHighDPIResources>
	</PropertyGroup>
	<RetargetAssets_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49 UseHighDPIResources="$(UseHighDPIResources)"
						TargetPlatform="$(XamarinProjectType)"
						DefaultLanguage="$(DefaultLanguage)"
						ContentItems="@(Content)"
						Condition="'$(XamarinProjectType)'!=''">
	  <Output TaskParameter="Assets"
					  ItemName="Assets" />
	  <Output TaskParameter="RetargetedAssets"
					  ItemName="RetargetedAssets" />
	</RetargetAssets_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49>
	<ItemGroup>
	  <Content Remove="@(Assets)" />
	</ItemGroup>
	<ItemGroup Condition="'$(XamarinProjectType)'=='ios'">
	  <BundleResource Condition="'%(RetargetedAssets.AssetType)' == 'image'" Include="@(RetargetedAssets)" />
	  <BundleResource Condition="'%(RetargetedAssets.AssetType)' == 'generic'" Include="@(RetargetedAssets)" />
	</ItemGroup>
	<ItemGroup Condition="'$(XamarinProjectType)'=='android'">
	  <AndroidResource Condition="'%(RetargetedAssets.AssetType)' =='image'" Include="@(RetargetedAssets)" />
	  <AndroidAsset Condition="'%(RetargetedAssets.AssetType)' =='generic'" Include="@(RetargetedAssets)" />
	</ItemGroup>
  </Target>

  <!--
  XAML Resource Trimming
  -->

  <Target Name="_UnoLinkerHintsSubstitutionsMerge"
	  Condition="'$(UnoXamlResourcesTrimming)'=='true'"
	  AfterTargets="CoreCompile">

	<ItemGroup>
	  <!-- Filter ReferenceCopyLocalPaths as it may contain pdbs as well -->
	  <_UnoLinkerHintsPass1AssembliesForReferencePaths
			  Include="@(ReferencePath)"
			  Condition="'%(Extension)' == '.dll'" />
	</ItemGroup>

	<ItemGroup>
	  <_SubstitutionFiles Include="$(BaseIntermediateOutputPath)\Substitutions\*.Substitutions.xml" />
	</ItemGroup>

	<LinkerDefinitionMergerTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49
		DefinitionFiles="@(_SubstitutionFiles)"
		TargetAssembly="$(IntermediateOutputPath)$(TargetFileName)"
		TargetResourceName="ILLink.Substitutions.xml"
		ReferencePath="@(_UnoLinkerHintsPass1AssembliesForReferencePaths)"
	  />

  </Target>

  <Target Name="_UnoLinkerHintsPass1"
		Condition="'$(IsUnoHead)'=='true' and '$(UnoXamlResourcesTrimming)'=='true'"
		BeforeTargets="BuildDist">

	<ItemGroup>
	  <!-- Filter ReferenceCopyLocalPaths as it may contain pdbs as well -->
	  <_UnoLinkerHintsPass1AssembliesForReferencePaths
			  Include="@(ReferencePath)"
			  Condition="'%(Extension)' == '.dll'" />
	</ItemGroup>

	<LinkerHintGeneratorTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49
		CurrentProjectPath="$(MSBuildProjectDirectory)"
		AssemblyPath="$(IntermediateOutputPath)$(TargetFileName)"
		OutputPath="$(ProjectDir)$(IntermediateOutputPath)/linkerhints"
		ReferencePath="@(_UnoLinkerHintsPass1AssembliesForReferencePaths)"
		ILLinkerPath="$(MSBuildThisFileDirectory)\..\..\tools\linker">
	  <Output TaskParameter="OutputFeatures"
			   ItemName="_LinkerHintOutputFeatures" />
	</LinkerHintGeneratorTask_v919cd95b5a21c1390b705fb5d53519ed1a3bfa49>

	<ItemGroup>
	  <RuntimeHostConfigurationOption Include="@(_LinkerHintOutputFeatures)" />
	</ItemGroup>
  </Target>
  
  <Target Name="_ValidateBootstraperVersion"
		  BeforeTargets="BeforeBuild"
		  Condition="'$(IsUnoHead)'=='true' and '$(UnoXamlResourcesTrimming)'=='true'">
	<ItemGroup>
	  <_UnoWasmBootstrapVersion Include="@(PackageReference->'%(Version)')"
								Condition="'%(Identity)'=='Uno.Wasm.Bootstrap'"/>
	</ItemGroup>
	<PropertyGroup>
	  <_UnoWasmBootstrapVersionString>@(_UnoWasmBootstrapVersion)</_UnoWasmBootstrapVersionString>
	</PropertyGroup>
	
	<Error Text="UnoXamlResourcesTrimming cannot be used with the current Uno.Wasm.Bootstrap package version (Found $(_UnoWasmBootstrapVersionString), 3.0 or later is needed)"
           Condition="'$(_UnoWasmBootstrapVersionString)'!='' and '$(_UnoWasmBootstrapVersionString.Split(`-`)[0])'&lt;'3.0'"/>
  </Target>

  <!--
    Warn when the task is executed in devenv.exe: https://github.com/dotnet/project-system/issues/4494
    -->

  <UsingTask
TaskName="CheckForDevenv"
TaskFactory="CodeTaskFactory"
AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
	<ParameterGroup />
	<Task>
	  <Reference Include="System.Xml"/>
	  <Using Namespace="System"/>
	  <Using Namespace="System.IO"/>
	  <Code Type="Fragment" Language="cs">
		<![CDATA[  
            if (System.Diagnostics.Process.GetCurrentProcess().ProcessName.Equals("devenv", System.StringComparison.OrdinalIgnoreCase))
            {
              Log.LogWarning("The Uno.UI.Tasks build task is running under devenv.exe you will have to restart Visual Studio to rebuild it.");
            }
          ]]>
	  </Code>
	</Task>
  </UsingTask>

</Project>
